#!/usr/bin/env python3
import argparse
import pathlib
import pkg_resources
import logging
import dion

# Run Version
def run_version(args):
    ver = pkg_resources.get_distribution("dion").version
    print(f"Dion - The XML Document Processor\n Version: {ver}")

##################### Argument Parser ##################### 
parser = argparse.ArgumentParser()
parser.set_defaults(func=run_version)

# Options
parser.add_argument("-a", "--all", action="store_true", help="Whether to build all items in list")
parser.add_argument("-c", "--config", default="dion.json")
parser.add_argument("--debug", action="store_true", help="Prints debugging information to stdout")
parser.add_argument("-f", "--force", action="store_true", help="Forces certain operations")
parser.add_argument("-t", "--target", default="*", help="Build configuration to target")
parser.add_argument("-v", "--verbose", action="store_true", help="Enables verbosity in logs")

# Commands
cmd = parser.add_subparsers(title="command")

cmd.add_parser('build').set_defaults(func=dion.run_build)
cmd.add_parser('init').set_defaults(func=dion.run_init)
cmd.add_parser('version').set_defaults(func=run_version)


# Parse Options
args = parser.parse_args()


# Configure Logging
log_format = "[ %(levelname)s ]: %(message)s"
if args.debug: 
    log_level = logging.DEBUG
elif args.verbose:
    log_level = logging.INFO
else:
    log_level = logging.WARN

logging.basicConfig(level=log_level, format=log_format)

args.func(args)
